<project default="devbuild">

	<!-- Simply set the name of the plugin here, e.g. "fileUpload") instead of "sample" -->
	<property name="name" value="sample" />

	<!-- Use this task to let ant copy the compiled jar files to the target folders for development  -->
	<target name="devbuild">
		<exec executable="mvn">
			<arg value="package"/>
		</exec>
		<copy file="module-main/target/plugin_intranda_administration_${name}.jar" todir="/opt/digiverso/goobi/plugins/administration/" overwrite="true"/>
		<copy file="module-gui/target/plugin_intranda_administration_${name}-GUI.jar" todir="/opt/digiverso/goobi/plugins/GUI/" overwrite="true"/>
	</target>

	<!-- Use this task to let configuration, plugin, user interface files and maven artifact be renamed to your plugin name -->
	<target name="rename">
		<replace file="pom.xml" token="&lt;artifactId&gt;sample" value="&lt;artifactId&gt;${name}" />

		<replace file="module-gui/pom.xml" token="goobi-plugin-administration-sample" value="goobi-plugin-administration-${name}" />
		<replace file="module-gui/pom.xml" token="&lt;artifactId&gt;sample" value="&lt;artifactId&gt;${name}" />
		<replace file="module-gui/pom.xml" token="&lt;jar.name&gt;plugin_intranda_administration_sample" value="&lt;jar.name&gt;plugin_intranda_administration_${name}" />

		<replace file="module-main/pom.xml" token="goobi-plugin-administration-sample" value="goobi-plugin-administration-${name}" />
		<replace file="module-main/pom.xml" token="&lt;artifactId&gt;sample" value="&lt;artifactId&gt;${name}" />
		<replace file="module-main/pom.xml" token="&lt;jar.name&gt;plugin_intranda_administration_sample" value="&lt;jar.name&gt;plugin_intranda_administration_${name}" />

		<move file="plugin_intranda_administration_sample.xml" tofile="plugin_intranda_administration_${name}.xml" failonerror="false"/>
		<move file="src/main/resources/GUI/META-INF/resources/uii/plugin_administration_sample.xhtml" tofile="src/main/resources/GUI/META-INF/resources/uii/plugin_administration_${name}.xhtml" failonerror="false"/>
		<replace file="src/main/resources/GUI/META-INF/resources/uii/plugin_administration_${name}.xhtml" token="Plugin_administration_sample" value="Plugin_administration_${name}" />

		<capitalize string="${name}" to="capitalize" />
		<move file="src/main/java/de/intranda/goobi/plugins/SampleAdministrationPlugin.java" tofile="src/main/java/de/intranda/goobi/plugins/${capitalize}AdministrationPlugin.java" failonerror="false"/>
		<replace file="src/main/java/de/intranda/goobi/plugins/${capitalize}AdministrationPlugin.java" token="SampleAdministrationPlugin" value="${capitalize}AdministrationPlugin" />
		<replace file="src/main/java/de/intranda/goobi/plugins/${capitalize}AdministrationPlugin.java" token="intranda_administration_sample" value="intranda_administration_${name}" />
		<replace file="src/main/java/de/intranda/goobi/plugins/${capitalize}AdministrationPlugin.java" token="plugin_administration_sample" value="plugin_administration_${name}" />
		<replace file="src/main/java/de/intranda/goobi/plugins/${capitalize}AdministrationPlugin.java" token="Sample administration plugin" value="${capitalize} administration plugin" />

		<replace file="../README.md" token="plugin-administration-sample" value="plugin-administration-${name}" />
		<replace file="../README.md" token="intranda_administration_sample" value="intranda_administration_${name}" />
		<replaceregexp file="../README.md" match="This is the(.*?)interface." flags="gs"
			replace="This is the ${capitalize} Goobi administration plugin. A description for this plugin is still missing." />
		<replaceregexp file="../README.md" match="## KICKSTART(.*?)## Plugin details" flags="gs" replace="## Plugin details" />

		<replace file=".project" token="A-goobi-plugin-administration-sample" value="goobi-plugin-administration-${name}" />
		<replaceregexp file="build.xml" match="\t&lt;!-- Use this task to let configuration(.*?)&lt;/project&gt;" flags="gs" replace="&lt;/project&gt;" />

	</target>

	<!-- This is a small helper to convert the plugin name into a capitalized string for the java class -->
	<scriptdef language="javascript" name="capitalize">
	    <attribute name="string" />
	    <attribute name="to" />
	    var s = new String( attributes.get( "string" ) );
	    project.setProperty( attributes.get( "to" ),
	            s.replace( /^.|\s\S/g,
	            function(a) { return a.toUpperCase(); }) );
	</scriptdef>

</project>
